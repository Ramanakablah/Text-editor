{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","style","color","type","id","onChange","ChangeMode","htmlFor","Textform","useState","text","settext","fontWeight","mystyle","setmystyle","column","event","target","value","onClick","newtext","toUpperCase","showalert","alert","role","message","propTypes","first","PropTypes","string","App","setmode","alerte","setalerte","msg","typ","setTimeout","document","body","backgroundColor","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b639e81f.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\" style={{color: props.mode==='light'?'black':'white'}}>Text-Editor</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"style={{color: props.mode==='light'?'black':'white'}}>Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\"style={{color: props.mode==='light'?'black':'white'}}>About</a>\r\n        </li> */}\r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n     <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={props.ChangeMode}/>\r\n     <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{color: props.mode==='dark'?'white':'black'}}>Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const[text, settext] = useState(\"enter the text\")\r\n    const [mystyle, setmystyle] = useState({\r\n      color:'black',\r\n      fontWeight:'none'\r\n    })\r\n\r\n    const handleit=(event)=>{\r\n      settext(event.target.value);\r\n    }\r\n    const clearTxt=()=>{\r\n      settext('');\r\n      setmystyle({\r\n       color:'black'\r\n      })\r\n      props.showalert(\"textarea is clean\",\"Success\")\r\n    }\r\n\r\n    const Red=()=>{\r\n      setmystyle({\r\n        color:'Red'\r\n      })\r\n      props.showalert(\"Dark mode on\",\"warning\")\r\n    }\r\n    \r\n    const Blue=()=>{\r\n      setmystyle({\r\n        color:'#0017FF',\r\n        fontWeight:'normal'\r\n      })\r\n      props.showalert(\"colour is blue\",\"primary\")\r\n    }\r\n\r\n    const Bold=()=>{\r\n      setmystyle({\r\n        \r\n        fontWeight:'Bold'\r\n      })\r\n      props.showalert(\"Text is converted in Bold\",\"Success\")\r\n    }\r\n\r\n    const Toupper=()=>{\r\n        let newtext=text.toUpperCase();\r\n        settext(newtext); \r\n        props.showalert(\"converted to upper\",\"Success\")\r\n    }\r\n    \r\n    return (<>\r\n        <div className=\"container\">\r\n        <h1 style={{color: props.mode==='light'?'black':'white'}} >Enter your text here..</h1>\r\n        </div>\r\n        <div className=\"container my-4\">\r\n         <textarea className=\"form-control\" id=\"myBox\" column=\"10\" onChange={handleit} value={text} style={mystyle} ></textarea>\r\n          <button className=\"btn btn-primary my-3\" onClick={Toupper}> To upper case </button>\r\n           <button className=\"btn btn-danger mx-3 my-3\" onClick={clearTxt}> Clear Text</button>\r\n           <button className=\"btn btn-danger mx-3 my-3\" onClick={Red}>Red</button>\r\n           <button className=\"btn btn-primary mx-3 my-3\" onClick={Blue}>Blue</button>\r\n           <button className=\"btn btn-primary mx-3 my-3\" onClick={Bold}>Bold</button>\r\n           <p style={{color: props.mode==='light'?'black':'white'}}>{text}</p>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.message}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import Navbar from './components/Navbar'\nimport './App.css';\nimport PropTypes from '../node_modules/prop-types'\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const [alerte, setalerte] = useState(null)\n  const showalert = (msg, typ) => {\n    setalerte({\n      message: msg,\n      type: typ\n    })\n    setTimeout(() => {\n      setalerte(null)\n    }, 1500)\n  }\n  const ChangeMode = () => {\n    if (mode === 'light') {\n      document.body.style.backgroundColor = '#001E5B'\n      setmode('dark');\n      showalert(\"Dark mode on\", \"Success\")\n      document.title = 'Text Editor in Dark mode'\n    }\n    else {\n      setmode('light');\n      showalert(\"Light mode on\", \"Success\")\n      document.body.style.backgroundColor = 'white'\n      document.title = 'Text Editor in Light mode'\n    }\n  }\n\n  return (\n    <>\n      <Navbar mode={mode} ChangeMode={ChangeMode} />\n      <Alert alert={alerte} />\n      <Textform mode={mode} showalert={showalert} />\n      </>\n      );\n  }\n\n      Navbar.propTypes= {\n        first : PropTypes.string\n  }\n\n      export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}